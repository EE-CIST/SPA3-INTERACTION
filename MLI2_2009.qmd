---
title: "MLI2-2009"
author: "Grasland C."
format: html
embed-resources: true
---


```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE)
library(sf, warn.conflicts = T,quietly = T)
library(dplyr,warn.conflicts = T, quietly = T)
library(tidyr,warn.conflicts = T,quietly = T)
library(knitr)
library(mapsf)


```



## Mali 2009 / Niveau 2

On utilise les données IPUMS du recensement de 2013. On s'intéresse aux migrations durée de vie (entre le lieu de naissance et le lieu de résidence).

## Fonds de carte

On utilise le découpage de premier niveau du pays.

```{r, fig.width=8}
map1<-readRDS("GEO/MLI/MLI1_map_OK.RDS")
map1<-st_transform(map1,3857)
map<-readRDS("GEO/MLI/MLI2_map_OK.RDS")
map<-st_transform(map,3857)
map<-map %>%  select(code=ADMIN2PCOD,
                    nom = NAME_2)




mf_theme("darkula")
mf_shadow(map)
mf_map(map, col = "#4e4f4f", border = "#808080", add= TRUE)
mf_map(map1, col = NA, border = "#808080",lwd=3, add= TRUE)
mf_label(map,var="code",col="white",cex = 0.3,overlap = F)
mf_layout(title = "Code des unités administratives",
          credits = "(c) EE CIST 2022-2023 - Fonds de carte GADM & OCHA")
#dev.off()
```

## Matrice de migration totale

On extrait la matrice de migration totale puis on calcule pour chaque paire de régions le solde et le volume des échanges.

```{r}

don<-readRDS("IPUMS/MIG.RDS")
don <- don %>% filter(Pays == "Mali", YEAR==2009)
  

miglong<-don %>% mutate(i = COD_NAISSANCE_Niv2,
                    j = COD_RESIDENCE_Niv2) %>%
            filter(i !=j,
                   i !="Fore",
                   nchar(i)==6) %>%
            group_by(i,j) %>%
            summarise(Fij=sum(POP_Total_IPUMS))
#kable(head(miglong))




miglong2<-miglong %>% select(i=j,j=i,Fji=Fij)
miglong<-miglong %>% left_join(miglong2)
miglong$FVij<-miglong$Fij+miglong$Fji
miglong$FSij<-miglong$Fji-miglong$Fij

map_ctr<-st_centroid(map)
ctr<-data.frame(st_coordinates(map_ctr))
ctr$i<-map_ctr$code
ctr$Ni<-map_ctr$nom
names(ctr)<-c("Xi","Yi","i","Ni")
miglong<-left_join(miglong,ctr)
names(ctr)<-c("Xj","Yj","j","Nj")
miglong<-left_join(miglong,ctr) %>% select(i,j,Ni,Nj,Fij,Fji,FVij,FSij,Xi,Yi,Xj,Yj)

miglong<-miglong %>% filter(is.na(Fij)==F,
                            is.na(FSij)==F,
                            is.na(FVij)==F)
head(miglong)

```


### Volume

On représente les volumes de flux  dont la valeur est supérieure à la moyenne .

```{r, fig.width=8}


#choix du seuil
sel<-miglong
#summary(sel$FVij)
seuil <- mean(sel$FVij)
#seuil=5000
sel <- sel[sel$FVij > seuil,]

#choix de l'épaisseur maximale des flux
maxsize <- 25
sel$size <- maxsize*sel$FVij/max(sel$FVij)

#retouche des coordonnées pour éloigner les flèches des centres
coeff <- 0.0
sel$XXi <- sel$Xi+coeff*(sel$Xj-sel$Xi)
sel$XXj <- sel$Xj-coeff*(sel$Xj-sel$Xi)
sel$YYi <- sel$Yi+coeff*(sel$Yj-sel$Yi)
sel$YYj <- sel$Yj-coeff*(sel$Yj-sel$Yi)


## Volume par région

vol<-miglong %>% group_by(i) %>% summarise(vol =sum(Fij)+sum(Fji)) %>% rename(code=i)


map_ctr<-left_join(map_ctr,vol)

 
#cartographie d'une ou plusieurs couches de carte (facultatif)
#pdf("benin_vol.pdf",width = 3,height=5)
library(mapsf)
mf_theme("darkula")
mf_shadow(map)
mf_map(map, col = "#4e4f4f", border = "#808080", add= TRUE)
mf_map(map1, col = NA, border = "#808080",lwd=3, add= TRUE)


#plot(map$geometry)
#cartographie des flux
segments(sel$XXi, sel$YYi, sel$XXj, sel$YYj, col="lightyellow", lwd=sel$size)

# Volume
mf_map(map_ctr,type="prop",var = "vol",col="orange",inches = 0.2,leg_title = "Volume",leg_pos = "topleft",lwd = 0.15,leg_val_cex = 0.4)
#ajout des codes (facultatif)
mf_label(map_ctr,var = "ADMIN_NAME",col="white",cex = 0.4)

mf_layout(title = "Volume des migrations",
          credits = "IPUMS International / EE CIST 2023", arrow = FALSE, scale = FALSE)
#dev.off()
```

### Solde

On représente les soldes de flux dont la valeur est supérieure à la moyenne .

```{r, fig.width=8}


#choix du seuil
sel<-miglong %>% filter(FSij >0)
#summary(sel$FSij)
seuil <- mean(sel$FSij)
#seuil=2000
sel <- sel[sel$FSij > seuil,]

#choix de l'épaisseur maximale des flux
maxsize <- 15
sel$size <- maxsize*sel$FSij/max(sel$FSij)

#retouche des coordonnées pour éloigner les flèches des centres
coeff <- 0.10
sel$XXi <- sel$Xi+coeff*(sel$Xj-sel$Xi)
sel$XXj <- sel$Xj-coeff*(sel$Xj-sel$Xi)
sel$YYi <- sel$Yi+coeff*(sel$Yj-sel$Yi)
sel$YYj <- sel$Yj-coeff*(sel$Yj-sel$Yi)


## Solde par région

sol<-miglong %>% group_by(i) %>% 
  summarise(sol =sum(Fji)-sum(Fij)) %>% 
  rename(code=i) %>%
  mutate(sol_abs = abs(sol), sol_sign=as.factor(sol>0))
levels(sol$sol_sign)<-c("Négatif","Positif")
map_ctr<-left_join(map_ctr,sol)

 
#cartographie d'une ou plusieurs couches de carte (facultatif)
#pdf("benin_sol.pdf",width = 3,height=5)
library(mapsf)
mf_theme("darkula")
mf_shadow(map)
mf_map(map, col = "#4e4f4f", border = "#808080", add= TRUE)
mf_map(map1, col = NA, border = "#808080",lwd=3, add= TRUE)

#cartographie des flux
arrows(sel$XXj, sel$YYj, sel$XXi, sel$YYi, col="lightyellow", lwd=sel$size,length = 0.03)

# Volume
mf_map(map_ctr,type="prop_typo",var=c("sol_abs","sol_sign"),inches = 0.15,leg_pos = c("topleft","left"),
       leg_title = ("solde"))



#ajout des codes (facultatif)
mf_label(map_ctr,var = "ADMIN_NAME",col="white",cex = 0.4)

mf_layout(title = "Solde des migrations",
          credits = "IPUMS International / EE CIST 2023", arrow = FALSE, scale = FALSE)
#dev.off()
```


### Flux dominant

On détermine pour chaque unité spatiale son flux le plus important vers une autre unité spatiale. On considère qu'une unité est de type : 

- **dominante** si son nombre si son nombre d'arrivée est supérieur à l'unité vers laquelle elle envoie son plus grand flux.
- **dominée** si son nombre d'arrivée est inférieur à l'unité vers laquelle elle envoie son plus grand flux.
- **relais** si elle est à la fois dominée et dominante.

```{r, fig.width=8}
# selection des flux les plus importants
dom<-miglong %>% filter(i !=j) %>% # Elimine les populations immobiles
                 group_by(i) %>% # Regroupe par lieu d'origine
                 filter(FVij == max(FVij,na.rm=T)) %>% # sélectionne le plus grand flux
                 select(i,j,Xi,Yi,Xj,Yj,FVij) # ne conserve que les colonnes utiles
# calcul du total des arrivées 
TOT <- miglong %>% group_by(j) %>%
                  summarize(TOTj = sum(FVij,na.rm=T)) %>%
                  select(j,TOTj)

# Effectue la jointure en j
dom <- dom %>% left_join(TOT)

# Effectue la jointure en i
names(TOT)<-c("i","TOTi")
dom <- dom %>% left_join(TOT)

# Vérifie que ARRi < ARRj
dom <- dom %>% filter(TOTi < TOTj)

# Donne un type à chaque région
TOT$type <- "relais"
TOT$type[!(TOT$i %in% dom$j)]<-"dominé"
TOT$type[!(TOT$i %in% dom$i)]<-"dominant"


# relie le type à la carte
TOT<-TOT %>% select(code=i,TOT=TOTi, type)
map<-map%>% left_join(TOT)

# Cartographie le résultat

mf_theme("darkula")
mf_shadow(map)
mf_map(map, col = "#4e4f4f", border = "#808080", add= TRUE)
mf_map(map1, col = NA, border = "#808080",lwd=3, add= TRUE)
#cartographie des liens de domination
maxsize=15
dom$size <- maxsize*dom$FVij/max(dom$FVij,na.rm=T)
segments(dom$Xi, dom$Yi, dom$Xj, dom$Yj, col="lightyellow", lwd=dom$size,length = 0.03)


# Ajoute le poids des noeuds
mf_map(map, 
       type="prop_typo",
       var=c("TOT","type"),
       inches=0.15,
       pal=c("red","lightgreen","orange"),
       leg_title = c("Taille","Type"),
       leg_pos = c("topleft","left"))

mf_layout(title = "Flux dominants",
          credits = "IPUMS International / EE CIST 2023", arrow = FALSE, scale = FALSE)


```